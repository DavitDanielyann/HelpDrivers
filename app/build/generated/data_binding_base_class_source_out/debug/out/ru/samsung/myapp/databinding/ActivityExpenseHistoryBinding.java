// Generated by view binder compiler. Do not edit!
package ru.samsung.myapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.samsung.myapp.R;

public final class ActivityExpenseHistoryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button TiresButton;

  @NonNull
  public final Button accumlatorButton;

  @NonNull
  public final Button appaButton;

  @NonNull
  public final Button inspectionButton;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final Button oilButton;

  @NonNull
  public final Button taxButton;

  private ActivityExpenseHistoryBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button TiresButton, @NonNull Button accumlatorButton, @NonNull Button appaButton,
      @NonNull Button inspectionButton, @NonNull ConstraintLayout main, @NonNull Button oilButton,
      @NonNull Button taxButton) {
    this.rootView = rootView;
    this.TiresButton = TiresButton;
    this.accumlatorButton = accumlatorButton;
    this.appaButton = appaButton;
    this.inspectionButton = inspectionButton;
    this.main = main;
    this.oilButton = oilButton;
    this.taxButton = taxButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExpenseHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExpenseHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_expense_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExpenseHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Tires_button;
      Button TiresButton = ViewBindings.findChildViewById(rootView, id);
      if (TiresButton == null) {
        break missingId;
      }

      id = R.id.accumlator_button;
      Button accumlatorButton = ViewBindings.findChildViewById(rootView, id);
      if (accumlatorButton == null) {
        break missingId;
      }

      id = R.id.appa_button;
      Button appaButton = ViewBindings.findChildViewById(rootView, id);
      if (appaButton == null) {
        break missingId;
      }

      id = R.id.inspection_button;
      Button inspectionButton = ViewBindings.findChildViewById(rootView, id);
      if (inspectionButton == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.oil_button;
      Button oilButton = ViewBindings.findChildViewById(rootView, id);
      if (oilButton == null) {
        break missingId;
      }

      id = R.id.tax_button;
      Button taxButton = ViewBindings.findChildViewById(rootView, id);
      if (taxButton == null) {
        break missingId;
      }

      return new ActivityExpenseHistoryBinding((ConstraintLayout) rootView, TiresButton,
          accumlatorButton, appaButton, inspectionButton, main, oilButton, taxButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
