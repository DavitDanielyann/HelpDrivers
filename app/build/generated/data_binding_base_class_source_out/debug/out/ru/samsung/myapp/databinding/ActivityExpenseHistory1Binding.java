// Generated by view binder compiler. Do not edit!
package ru.samsung.myapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TableLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.samsung.myapp.R;

public final class ActivityExpenseHistory1Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView addButton;

  @NonNull
  public final EditText descriptionEditText;

  @NonNull
  public final TableLayout expenseTable;

  @NonNull
  public final Spinner monthSpinner;

  @NonNull
  public final EditText priceEditText;

  @NonNull
  public final ConstraintLayout rootLayout;

  @NonNull
  public final Button saveButton;

  @NonNull
  public final TextView titleText;

  private ActivityExpenseHistory1Binding(@NonNull ConstraintLayout rootView,
      @NonNull TextView addButton, @NonNull EditText descriptionEditText,
      @NonNull TableLayout expenseTable, @NonNull Spinner monthSpinner,
      @NonNull EditText priceEditText, @NonNull ConstraintLayout rootLayout,
      @NonNull Button saveButton, @NonNull TextView titleText) {
    this.rootView = rootView;
    this.addButton = addButton;
    this.descriptionEditText = descriptionEditText;
    this.expenseTable = expenseTable;
    this.monthSpinner = monthSpinner;
    this.priceEditText = priceEditText;
    this.rootLayout = rootLayout;
    this.saveButton = saveButton;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExpenseHistory1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExpenseHistory1Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_expense_history1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExpenseHistory1Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addButton;
      TextView addButton = ViewBindings.findChildViewById(rootView, id);
      if (addButton == null) {
        break missingId;
      }

      id = R.id.descriptionEditText;
      EditText descriptionEditText = ViewBindings.findChildViewById(rootView, id);
      if (descriptionEditText == null) {
        break missingId;
      }

      id = R.id.expenseTable;
      TableLayout expenseTable = ViewBindings.findChildViewById(rootView, id);
      if (expenseTable == null) {
        break missingId;
      }

      id = R.id.monthSpinner;
      Spinner monthSpinner = ViewBindings.findChildViewById(rootView, id);
      if (monthSpinner == null) {
        break missingId;
      }

      id = R.id.priceEditText;
      EditText priceEditText = ViewBindings.findChildViewById(rootView, id);
      if (priceEditText == null) {
        break missingId;
      }

      ConstraintLayout rootLayout = (ConstraintLayout) rootView;

      id = R.id.saveButton;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new ActivityExpenseHistory1Binding((ConstraintLayout) rootView, addButton,
          descriptionEditText, expenseTable, monthSpinner, priceEditText, rootLayout, saveButton,
          titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
