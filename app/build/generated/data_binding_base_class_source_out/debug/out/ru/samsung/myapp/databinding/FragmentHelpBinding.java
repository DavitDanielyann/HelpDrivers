// Generated by view binder compiler. Do not edit!
package ru.samsung.myapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.samsung.myapp.R;

public final class FragmentHelpBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView closingText;

  @NonNull
  public final TextView expenseDescriptionText;

  @NonNull
  public final TextView expenseHistoryText;

  @NonNull
  public final TextView helpText;

  @NonNull
  public final TextView reminderDescriptionText;

  @NonNull
  public final TextView reminderText;

  private FragmentHelpBinding(@NonNull ConstraintLayout rootView, @NonNull TextView closingText,
      @NonNull TextView expenseDescriptionText, @NonNull TextView expenseHistoryText,
      @NonNull TextView helpText, @NonNull TextView reminderDescriptionText,
      @NonNull TextView reminderText) {
    this.rootView = rootView;
    this.closingText = closingText;
    this.expenseDescriptionText = expenseDescriptionText;
    this.expenseHistoryText = expenseHistoryText;
    this.helpText = helpText;
    this.reminderDescriptionText = reminderDescriptionText;
    this.reminderText = reminderText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHelpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHelpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_help, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHelpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.closingText;
      TextView closingText = ViewBindings.findChildViewById(rootView, id);
      if (closingText == null) {
        break missingId;
      }

      id = R.id.expenseDescriptionText;
      TextView expenseDescriptionText = ViewBindings.findChildViewById(rootView, id);
      if (expenseDescriptionText == null) {
        break missingId;
      }

      id = R.id.expenseHistoryText;
      TextView expenseHistoryText = ViewBindings.findChildViewById(rootView, id);
      if (expenseHistoryText == null) {
        break missingId;
      }

      id = R.id.helpText;
      TextView helpText = ViewBindings.findChildViewById(rootView, id);
      if (helpText == null) {
        break missingId;
      }

      id = R.id.reminderDescriptionText;
      TextView reminderDescriptionText = ViewBindings.findChildViewById(rootView, id);
      if (reminderDescriptionText == null) {
        break missingId;
      }

      id = R.id.reminderText;
      TextView reminderText = ViewBindings.findChildViewById(rootView, id);
      if (reminderText == null) {
        break missingId;
      }

      return new FragmentHelpBinding((ConstraintLayout) rootView, closingText,
          expenseDescriptionText, expenseHistoryText, helpText, reminderDescriptionText,
          reminderText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
